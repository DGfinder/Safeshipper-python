# Generated by Django 5.2.1

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companies', '0001_initial'),
        ('inspections', '0001_initial'),
        ('shipments', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('channel_type', models.CharField(choices=[('GENERAL', 'General Discussion'), ('SHIPMENT', 'Shipment-Specific'), ('EMERGENCY', 'Emergency Response'), ('COMPLIANCE', 'Compliance & Audit'), ('DIRECT', 'Direct Message'), ('COMPANY', 'Company Internal'), ('DRIVER', 'Driver Communication'), ('CUSTOMER', 'Customer Support')], default='GENERAL', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_private', models.BooleanField(default=False)),
                ('is_archived', models.BooleanField(default=False)),
                ('archived_at', models.DateTimeField(blank=True, null=True)),
                ('is_emergency_channel', models.BooleanField(default=False)),
                ('emergency_level', models.IntegerField(blank=True, choices=[(1, 'Low'), (2, 'Medium'), (3, 'High'), (4, 'Critical'), (5, 'Emergency')], null=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_channels', to=settings.AUTH_USER_MODEL)),
                ('related_company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communication_channels', to='companies.company')),
                ('related_shipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='communication_channels', to='shipments.shipment')),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='ChannelMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('MEMBER', 'Member'), ('MODERATOR', 'Moderator'), ('ADMIN', 'Administrator'), ('OWNER', 'Owner')], default='MEMBER', max_length=20)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_muted', models.BooleanField(default=False)),
                ('notify_on_all_messages', models.BooleanField(default=True)),
                ('notify_on_mentions', models.BooleanField(default=True)),
                ('notify_on_keywords', models.BooleanField(default=False)),
                ('keywords', models.TextField(blank=True, help_text='Comma-separated keywords to watch for')),
                ('last_read_at', models.DateTimeField(blank=True, null=True)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='communications.channel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DirectMessage',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('channel', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='direct_message_info', to='communications.channel')),
                ('user1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='direct_messages_as_user1', to=settings.AUTH_USER_MODEL)),
                ('user2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='direct_messages_as_user2', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message_type', models.CharField(choices=[('TEXT', 'Text Message'), ('FILE', 'File Attachment'), ('IMAGE', 'Image'), ('VOICE', 'Voice Message'), ('LOCATION', 'Location Share'), ('SYSTEM', 'System Message'), ('EMERGENCY', 'Emergency Alert')], default='TEXT', max_length=20)),
                ('content', models.TextField(blank=True)),
                ('file_url', models.URLField(blank=True, max_length=500)),
                ('file_name', models.CharField(blank=True, max_length=255)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('file_type', models.CharField(blank=True, max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('location_name', models.CharField(blank=True, max_length=255)),
                ('thread_id', models.UUIDField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('edited_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_edited', models.BooleanField(default=False)),
                ('is_pinned', models.BooleanField(default=False)),
                ('is_emergency', models.BooleanField(default=False)),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='communications.channel')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='communications.message')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MessageRead',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_receipts', to='communications.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MessageReaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('reaction', models.CharField(choices=[('=M', 'Thumbs Up'), ('=N', 'Thumbs Down'), ('d', 'Heart'), ('=', 'Laugh'), ('=.', 'Surprised'), ('="', 'Sad'), ('=!', 'Angry'), ('', 'Check'), ('L', 'X'), (' ', 'Warning'), ('=¨', 'Emergency')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reactions', to='communications.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('SHIPMENT_UPDATE', 'Shipment Updates'), ('DIRECT_MESSAGE', 'Direct Messages'), ('CHANNEL_MESSAGE', 'Channel Messages'), ('MENTION', 'Mentions'), ('EMERGENCY', 'Emergency Alerts'), ('SYSTEM', 'System Notifications'), ('COMPLIANCE', 'Compliance Alerts'), ('INSPECTION', 'Inspection Updates')], max_length=20)),
                ('delivery_method', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification')], max_length=10)),
                ('is_enabled', models.BooleanField(default=True)),
                ('quiet_hours_start', models.TimeField(blank=True, null=True)),
                ('quiet_hours_end', models.TimeField(blank=True, null=True)),
                ('timezone', models.CharField(default='UTC', max_length=50)),
                ('immediate', models.BooleanField(default=True)),
                ('digest_daily', models.BooleanField(default=False)),
                ('digest_weekly', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationQueue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_type', models.CharField(choices=[('SHIPMENT_UPDATE', 'Shipment Updates'), ('DIRECT_MESSAGE', 'Direct Messages'), ('CHANNEL_MESSAGE', 'Channel Messages'), ('MENTION', 'Mentions'), ('EMERGENCY', 'Emergency Alerts'), ('SYSTEM', 'System Notifications'), ('COMPLIANCE', 'Compliance Alerts'), ('INSPECTION', 'Inspection Updates')], max_length=20)),
                ('delivery_method', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('PUSH', 'Push Notification'), ('IN_APP', 'In-App Notification')], max_length=10)),
                ('subject', models.CharField(blank=True, max_length=255)),
                ('message', models.TextField()),
                ('html_message', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('recipient_address', models.CharField(max_length=255)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('SENT', 'Sent'), ('FAILED', 'Failed'), ('CANCELLED', 'Cancelled')], default='PENDING', max_length=20)),
                ('priority', models.IntegerField(default=5)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('retry_count', models.IntegerField(default=0)),
                ('max_retries', models.IntegerField(default=3)),
                ('last_error', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('related_message', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='communications.message')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['priority', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ShipmentEvent',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(choices=[('COMMENT', 'Comment'), ('STATUS_CHANGE', 'Status Change'), ('INSPECTION', 'Inspection Event'), ('LOCATION_UPDATE', 'Location Update'), ('DOCUMENT_UPLOAD', 'Document Upload'), ('PHOTO_UPLOAD', 'Photo Upload'), ('DELIVERY_UPDATE', 'Delivery Update'), ('ALERT', 'Alert/Warning'), ('SYSTEM', 'System Event')], max_length=20)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('details', models.TextField()),
                ('priority', models.CharField(choices=[('LOW', 'Low'), ('NORMAL', 'Normal'), ('HIGH', 'High'), ('URGENT', 'Urgent')], default='NORMAL', max_length=10)),
                ('attachment_url', models.URLField(blank=True, max_length=500)),
                ('attachment_type', models.CharField(blank=True, max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_internal', models.BooleanField(default=False)),
                ('is_automated', models.BooleanField(default=False)),
                ('related_inspection', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inspections.inspection')),
                ('shipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='shipments.shipment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shipment_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='EventRead',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('read_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='read_receipts', to='communications.shipmentevent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EventMention',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentions', to='communications.shipmentevent')),
                ('mentioned_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_mentions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='notificationqueue',
            name='related_event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='communications.shipmentevent'),
        ),
        migrations.AddField(
            model_name='channel',
            name='participants',
            field=models.ManyToManyField(related_name='channels', through='communications.ChannelMembership', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['channel_type', 'created_at'], name='communications_channel_channe_56bd61_idx'),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['is_private', 'is_archived'], name='communications_channel_is_priv_cebaeb_idx'),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['related_shipment', 'channel_type'], name='communications_channel_related_a05647_idx'),
        ),
        migrations.AddIndex(
            model_name='channel',
            index=models.Index(fields=['is_emergency_channel', 'emergency_level'], name='communications_channel_is_emer_8b3c9a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='channelmembership',
            unique_together={('user', 'channel')},
        ),
        migrations.AddIndex(
            model_name='channelmembership',
            index=models.Index(fields=['user', 'is_active'], name='communications_channelme_user_id_1be4f9_idx'),
        ),
        migrations.AddIndex(
            model_name='channelmembership',
            index=models.Index(fields=['channel', 'role'], name='communications_channelme_channel_eb7749_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='directmessage',
            unique_together={('user1', 'user2')},
        ),
        migrations.AddIndex(
            model_name='directmessage',
            index=models.Index(fields=['user1', 'is_active'], name='communications_directme_user1_i_d2b9ab_idx'),
        ),
        migrations.AddIndex(
            model_name='directmessage',
            index=models.Index(fields=['user2', 'is_active'], name='communications_directme_user2_i_7a7e9f_idx'),
        ),
        migrations.AddIndex(
            model_name='directmessage',
            index=models.Index(fields=['last_message_at'], name='communications_directme_last_me_2bb3b6_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['channel', 'created_at'], name='communications_message_channel_c02bb1_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['sender', 'created_at'], name='communications_message_sender__fe6e0a_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['thread_id', 'created_at'], name='communications_message_thread__cebc37_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['is_emergency', 'priority'], name='communications_message_is_emer_3b4b5c_idx'),
        ),
        migrations.AddIndex(
            model_name='message',
            index=models.Index(fields=['message_type', 'created_at'], name='communications_message_message_24af63_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messageread',
            unique_together={('message', 'user')},
        ),
        migrations.AddIndex(
            model_name='messageread',
            index=models.Index(fields=['user', 'read_at'], name='communications_messagere_user_id_81e86a_idx'),
        ),
        migrations.AddIndex(
            model_name='messageread',
            index=models.Index(fields=['message', 'read_at'], name='communications_messagere_message_70a4d6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='messagereaction',
            unique_together={('message', 'user', 'reaction')},
        ),
        migrations.AlterUniqueTogether(
            name='notificationpreference',
            unique_together={('user', 'notification_type', 'delivery_method')},
        ),
        migrations.AddIndex(
            model_name='notificationpreference',
            index=models.Index(fields=['user', 'is_enabled'], name='communications_notifica_user_id_a76b4f_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationpreference',
            index=models.Index(fields=['notification_type', 'delivery_method'], name='communications_notifica_notific_d23b4f_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['status', 'scheduled_at'], name='communications_notifica_status_a6bb6f_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['user', 'status'], name='communications_notifica_user_id_7b10e3_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['priority', 'created_at'], name='communications_notifica_priorit_a18e3a_idx'),
        ),
        migrations.AddIndex(
            model_name='notificationqueue',
            index=models.Index(fields=['delivery_method', 'status'], name='communications_notifica_deliver_8e2f11_idx'),
        ),
        migrations.AddIndex(
            model_name='shipmentevent',
            index=models.Index(fields=['shipment', 'event_type'], name='communications_shipment_shipmen_d765d3_idx'),
        ),
        migrations.AddIndex(
            model_name='shipmentevent',
            index=models.Index(fields=['user', 'timestamp'], name='communications_shipment_user_id_3a5f4d_idx'),
        ),
        migrations.AddIndex(
            model_name='shipmentevent',
            index=models.Index(fields=['priority', 'timestamp'], name='communications_shipment_priorit_b8e9af_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventread',
            unique_together={('event', 'user')},
        ),
        migrations.AddIndex(
            model_name='eventread',
            index=models.Index(fields=['user', 'read_at'], name='communications_eventrea_user_id_2c5b6e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='eventmention',
            unique_together={('event', 'mentioned_user')},
        ),
    ]