# Generated by Django 5.2.1 on 2025-07-03 06:25

import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("companies", "0001_initial"),
        ("dangerous_goods", "0003_alter_dangerousgood_options_historicaldangerousgood"),
        ("freight_types", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalShipment",
            fields=[
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "tracking_number",
                    models.CharField(
                        db_index=True,
                        editable=False,
                        help_text="Unique system-generated tracking number.",
                        max_length=100,
                        verbose_name="Tracking Number",
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="External reference (e.g., customer PO, booking ID).",
                        max_length=100,
                        null=True,
                        verbose_name="Reference Number",
                    ),
                ),
                (
                    "origin_location",
                    models.CharField(
                        help_text="Origin location name (temporary)", max_length=255
                    ),
                ),
                (
                    "destination_location",
                    models.CharField(
                        help_text="Destination location name (temporary)",
                        max_length=255,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PLANNING", "Planning"),
                            ("READY_FOR_DISPATCH", "Ready for Dispatch"),
                            ("IN_TRANSIT", "In Transit"),
                            ("AT_HUB", "At Hub/Depot"),
                            ("OUT_FOR_DELIVERY", "Out for Delivery"),
                            ("DELIVERED", "Delivered"),
                            ("EXCEPTION", "Exception/Issue"),
                            ("CANCELLED", "Cancelled"),
                            ("COMPLETED", "Completed"),
                        ],
                        db_index=True,
                        default="PENDING",
                        max_length=25,
                        verbose_name="Shipment Status",
                    ),
                ),
                (
                    "contract_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SPOT", "Spot Rate"),
                            ("CONTRACT", "Contract Rate"),
                            ("FLAT_RATE", "Flat Rate"),
                        ],
                        max_length=15,
                        null=True,
                        verbose_name="Contract Type",
                    ),
                ),
                (
                    "pricing_basis",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DEAD_WEIGHT", "Dead Weight (kg)"),
                            ("VOLUMETRIC", "Volumetric Weight (kg)"),
                            ("PER_UNIT", "Per Handling Unit"),
                            ("FLAT_RATE", "Flat Rate per Shipment"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Pricing Basis",
                    ),
                ),
                (
                    "dead_weight_kg",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Total Dead Weight (kg)"
                    ),
                ),
                (
                    "volumetric_weight_m3",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Total Volumetric Weight (m^3)",
                    ),
                ),
                (
                    "chargeable_weight_kg",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Chargeable Weight (kg)"
                    ),
                ),
                (
                    "estimated_pickup_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Estimated Pickup Date/Time"
                    ),
                ),
                (
                    "actual_pickup_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Actual Pickup Date/Time"
                    ),
                ),
                (
                    "estimated_delivery_date",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Estimated Delivery Date/Time",
                    ),
                ),
                (
                    "actual_delivery_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Actual Delivery Date/Time"
                    ),
                ),
                (
                    "instructions",
                    models.TextField(
                        blank=True, null=True, verbose_name="Special Instructions"
                    ),
                ),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "carrier",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="companies.company",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="companies.company",
                    ),
                ),
                (
                    "freight_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="freight_types.freighttype",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Requested By User",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Shipment",
                "verbose_name_plural": "historical Shipments",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="Shipment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tracking_number",
                    models.CharField(
                        db_index=True,
                        editable=False,
                        help_text="Unique system-generated tracking number.",
                        max_length=100,
                        unique=True,
                        verbose_name="Tracking Number",
                    ),
                ),
                (
                    "reference_number",
                    models.CharField(
                        blank=True,
                        db_index=True,
                        help_text="External reference (e.g., customer PO, booking ID).",
                        max_length=100,
                        null=True,
                        verbose_name="Reference Number",
                    ),
                ),
                (
                    "origin_location",
                    models.CharField(
                        help_text="Origin location name (temporary)", max_length=255
                    ),
                ),
                (
                    "destination_location",
                    models.CharField(
                        help_text="Destination location name (temporary)",
                        max_length=255,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("PLANNING", "Planning"),
                            ("READY_FOR_DISPATCH", "Ready for Dispatch"),
                            ("IN_TRANSIT", "In Transit"),
                            ("AT_HUB", "At Hub/Depot"),
                            ("OUT_FOR_DELIVERY", "Out for Delivery"),
                            ("DELIVERED", "Delivered"),
                            ("EXCEPTION", "Exception/Issue"),
                            ("CANCELLED", "Cancelled"),
                            ("COMPLETED", "Completed"),
                        ],
                        db_index=True,
                        default="PENDING",
                        max_length=25,
                        verbose_name="Shipment Status",
                    ),
                ),
                (
                    "contract_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("SPOT", "Spot Rate"),
                            ("CONTRACT", "Contract Rate"),
                            ("FLAT_RATE", "Flat Rate"),
                        ],
                        max_length=15,
                        null=True,
                        verbose_name="Contract Type",
                    ),
                ),
                (
                    "pricing_basis",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("DEAD_WEIGHT", "Dead Weight (kg)"),
                            ("VOLUMETRIC", "Volumetric Weight (kg)"),
                            ("PER_UNIT", "Per Handling Unit"),
                            ("FLAT_RATE", "Flat Rate per Shipment"),
                        ],
                        max_length=20,
                        null=True,
                        verbose_name="Pricing Basis",
                    ),
                ),
                (
                    "dead_weight_kg",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Total Dead Weight (kg)"
                    ),
                ),
                (
                    "volumetric_weight_m3",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="Total Volumetric Weight (m^3)",
                    ),
                ),
                (
                    "chargeable_weight_kg",
                    models.FloatField(
                        blank=True, null=True, verbose_name="Chargeable Weight (kg)"
                    ),
                ),
                (
                    "estimated_pickup_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Estimated Pickup Date/Time"
                    ),
                ),
                (
                    "actual_pickup_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Actual Pickup Date/Time"
                    ),
                ),
                (
                    "estimated_delivery_date",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Estimated Delivery Date/Time",
                    ),
                ),
                (
                    "actual_delivery_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Actual Delivery Date/Time"
                    ),
                ),
                (
                    "instructions",
                    models.TextField(
                        blank=True, null=True, verbose_name="Special Instructions"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "carrier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="carrier_shipments",
                        to="companies.company",
                    ),
                ),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="customer_shipments",
                        to="companies.company",
                    ),
                ),
                (
                    "freight_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="shipments",
                        to="freight_types.freighttype",
                    ),
                ),
                (
                    "requested_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="requested_shipments",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Requested By User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shipment",
                "verbose_name_plural": "Shipments",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ConsignmentItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.TextField(help_text="Description of the item.")),
                ("quantity", models.PositiveIntegerField(default=1)),
                (
                    "weight_kg",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Weight per unit (kg)",
                    ),
                ),
                (
                    "length_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Length per unit (cm)",
                    ),
                ),
                (
                    "width_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Width per unit (cm)",
                    ),
                ),
                (
                    "height_cm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="Height per unit (cm)",
                    ),
                ),
                (
                    "is_dangerous_good",
                    models.BooleanField(
                        default=False, help_text="Is this item a dangerous good?"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "dangerous_good_entry",
                    models.ForeignKey(
                        blank=True,
                        help_text="Link to the master DangerousGood entry if this item is a DG.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="consignment_items",
                        to="dangerous_goods.dangerousgood",
                    ),
                ),
                (
                    "shipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="shipments.shipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Consignment Item",
                "verbose_name_plural": "Consignment Items",
                "ordering": ["id"],
            },
        ),
        migrations.AddIndex(
            model_name="shipment",
            index=models.Index(
                fields=["tracking_number"], name="shipments_s_trackin_80db53_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shipment",
            index=models.Index(fields=["status"], name="shipments_s_status_536511_idx"),
        ),
        migrations.AddIndex(
            model_name="shipment",
            index=models.Index(
                fields=["reference_number"], name="shipments_s_referen_1d106f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shipment",
            index=models.Index(
                fields=["customer"], name="shipments_s_custome_4b802e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shipment",
            index=models.Index(
                fields=["carrier"], name="shipments_s_carrier_bf1b10_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shipment",
            index=models.Index(
                fields=["created_at"], name="shipments_s_created_1bef45_idx"
            ),
        ),
    ]
