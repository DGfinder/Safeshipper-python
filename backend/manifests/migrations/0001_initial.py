# Generated by Django 5.2.1 on 2025-07-13 22:35

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        (
            "dangerous_goods",
            "0004_placardtemplate_adgplacardrule_emergencycontact_and_more",
        ),
        ("documents", "0001_initial"),
        ("shipments", "0002_consignmentitem_dg_quantity_type_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Manifest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "file_name",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="File Name"
                    ),
                ),
                (
                    "file_size",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="File Size"
                    ),
                ),
                (
                    "mime_type",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="MIME Type"
                    ),
                ),
                (
                    "manifest_type",
                    models.CharField(
                        choices=[
                            ("DG_MANIFEST", "Dangerous Goods Manifest"),
                            ("PACKING_LIST", "Packing List"),
                            ("COMMERCIAL_INVOICE", "Commercial Invoice"),
                            ("CUSTOMS_DECLARATION", "Customs Declaration"),
                            ("COMBINED_MANIFEST", "Combined Manifest"),
                        ],
                        db_index=True,
                        max_length=50,
                        verbose_name="Manifest Type",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("UPLOADED", "Uploaded"),
                            ("ANALYZING", "Analyzing for Dangerous Goods"),
                            ("AWAITING_CONFIRMATION", "Awaiting User Confirmation"),
                            ("CONFIRMED", "Confirmed by User"),
                            ("PROCESSING_FAILED", "Processing Failed"),
                            ("FINALIZED", "Finalized - Shipment Created"),
                        ],
                        db_index=True,
                        default="UPLOADED",
                        max_length=50,
                        verbose_name="Processing Status",
                    ),
                ),
                (
                    "analysis_results",
                    models.JSONField(
                        blank=True,
                        help_text="Results from dangerous goods analysis",
                        null=True,
                        verbose_name="Analysis Results",
                    ),
                ),
                (
                    "confirmed_dangerous_goods",
                    models.JSONField(
                        blank=True,
                        help_text="User-confirmed dangerous goods from the manifest",
                        null=True,
                        verbose_name="Confirmed Dangerous Goods",
                    ),
                ),
                (
                    "analysis_started_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Analysis Started"
                    ),
                ),
                (
                    "analysis_completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Analysis Completed"
                    ),
                ),
                (
                    "confirmed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Confirmed At"
                    ),
                ),
                (
                    "finalized_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Finalized At"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "confirmed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="confirmed_manifests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Confirmed By",
                    ),
                ),
                (
                    "document",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="manifest",
                        to="documents.document",
                        verbose_name="Associated Document",
                    ),
                ),
                (
                    "processed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="processed_manifests",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Processed By",
                    ),
                ),
                (
                    "shipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="manifests",
                        to="shipments.shipment",
                        verbose_name="Shipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Manifest",
                "verbose_name_plural": "Manifests",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ManifestDangerousGoodMatch",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "found_text",
                    models.CharField(
                        help_text="The actual text that was found in the manifest",
                        max_length=255,
                        verbose_name="Found Text",
                    ),
                ),
                (
                    "match_type",
                    models.CharField(
                        choices=[
                            ("UN_NUMBER", "UN Number"),
                            ("EXACT_SYNONYM", "Exact Synonym"),
                            ("PROPER_NAME", "Proper Shipping Name"),
                            ("FUZZY_MATCH", "Fuzzy Match"),
                        ],
                        db_index=True,
                        max_length=50,
                        verbose_name="Match Type",
                    ),
                ),
                (
                    "confidence_score",
                    models.FloatField(
                        help_text="Confidence score from 0.0 to 1.0",
                        verbose_name="Confidence Score",
                    ),
                ),
                (
                    "page_number",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Page number where the match was found",
                        null=True,
                        verbose_name="Page Number",
                    ),
                ),
                (
                    "position_data",
                    models.JSONField(
                        blank=True,
                        help_text="Coordinates or other position information for highlighting",
                        null=True,
                        verbose_name="Position Data",
                    ),
                ),
                (
                    "is_confirmed",
                    models.BooleanField(
                        default=False,
                        help_text="Whether this match has been confirmed by the user",
                        verbose_name="Is Confirmed",
                    ),
                ),
                (
                    "confirmed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Confirmed At"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "confirmed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="confirmed_dg_matches",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Confirmed By",
                    ),
                ),
                (
                    "dangerous_good",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="manifest_matches",
                        to="dangerous_goods.dangerousgood",
                        verbose_name="Dangerous Good",
                    ),
                ),
                (
                    "manifest",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dg_matches",
                        to="manifests.manifest",
                        verbose_name="Manifest",
                    ),
                ),
            ],
            options={
                "verbose_name": "Manifest Dangerous Good Match",
                "verbose_name_plural": "Manifest Dangerous Good Matches",
                "ordering": ["-confidence_score", "found_text"],
            },
        ),
        migrations.AddIndex(
            model_name="manifest",
            index=models.Index(
                fields=["manifest_type", "status"],
                name="manifests_m_manifes_a6a095_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="manifest",
            index=models.Index(
                fields=["shipment", "status"], name="manifests_m_shipmen_e4abc7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="manifest",
            index=models.Index(
                fields=["status", "created_at"], name="manifests_m_status_d21cb2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="manifestdangerousgoodmatch",
            index=models.Index(
                fields=["manifest", "is_confirmed"],
                name="manifests_m_manifes_e47258_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="manifestdangerousgoodmatch",
            index=models.Index(
                fields=["dangerous_good", "match_type"],
                name="manifests_m_dangero_e3b9a3_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="manifestdangerousgoodmatch",
            index=models.Index(
                fields=["confidence_score"], name="manifests_m_confide_2871b9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="manifestdangerousgoodmatch",
            unique_together={("manifest", "dangerous_good", "found_text")},
        ),
    ]
