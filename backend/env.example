# ====================================================================
# SafeShipper Backend Environment Configuration
# ====================================================================
# Copy this file to .env and fill in your actual values
# See API_KEYS_SETUP.md for detailed setup instructions
#
# Quick Start:
# 1. Copy: cp env.example .env
# 2. Generate Django secret: python -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
# 3. Set up PostgreSQL and Redis
# 4. Add external service keys as needed
#
# Documentation:
# - Main Setup Guide: ../API_KEYS_SETUP.md
# - OAuth Setup: ../docs/external-services/oauth_setup.md
# - SMS Setup: ../docs/external-services/twilio_setup.md
# - Payment Setup: ../docs/external-services/stripe_setup.md
# - Storage Setup: ../docs/external-services/aws_s3_setup.md
# - Security Guide: ../docs/external-services/security_best_practices.md
#
# Validation:
# Run: python scripts/validate_env.py

# ====================================================================
# CORE DJANGO SETTINGS
# ====================================================================

# Django Core Settings
DEBUG=True
ENVIRONMENT=development
SECRET_KEY=your-secret-key-here-generate-a-secure-256-bit-key
ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0

# Time Zone & Internationalization
TIME_ZONE=UTC
LANGUAGE_CODE=en-us
USE_TZ=True

# ====================================================================
# DATABASE CONFIGURATION
# ====================================================================

# PostgreSQL Database (Required)
DB_ENGINE=django.contrib.gis.db.backends.postgis
DB_NAME=safeshipper
DB_USER=postgres
DB_PASSWORD=your-secure-database-password
DB_HOST=localhost
DB_PORT=5432

# ====================================================================
# CACHE & MESSAGE BROKER
# ====================================================================

# Redis Configuration (Required for Celery background tasks)
REDIS_URL=redis://localhost:6379/0
CELERY_BROKER_URL=redis://localhost:6379/0
CELERY_RESULT_BACKEND=redis://localhost:6379/0

# Celery Worker Configuration
CELERY_TASK_TIME_LIMIT=300
CELERY_TASK_SOFT_TIME_LIMIT=240
CELERY_WORKER_PREFETCH_MULTIPLIER=1
CELERY_WORKER_MAX_TASKS_PER_CHILD=1000

# ====================================================================
# FRONTEND INTEGRATION
# ====================================================================

# CORS Configuration (for frontend)
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://127.0.0.1:3000
CORS_ALLOW_CREDENTIALS=True

# ====================================================================
# API CONFIGURATION
# ====================================================================

# API Metadata
API_VERSION=v1
API_TITLE=SafeShipper API
API_DESCRIPTION=Comprehensive logistics and dangerous goods management API

# ====================================================================
# AUTHENTICATION & SECURITY
# ====================================================================

# JWT Configuration
JWT_ACCESS_TOKEN_LIFETIME=15
JWT_REFRESH_TOKEN_LIFETIME=1
JWT_SIGNING_KEY=your-jwt-signing-key-here
JWT_VERIFYING_KEY=
JWT_SLIDING_TOKEN_LIFETIME=5
JWT_SLIDING_TOKEN_REFRESH_LIFETIME=1

# ====================================================================
# EMAIL SERVICES
# ====================================================================

# Email Backend (Development: console, Production: smtp)
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend

# SMTP Configuration (Production)
# Recommended: SendGrid, AWS SES, or similar service
EMAIL_HOST=smtp.sendgrid.net
EMAIL_PORT=587
EMAIL_HOST_USER=your-email-username
EMAIL_HOST_PASSWORD=your-email-password
EMAIL_USE_TLS=True
DEFAULT_FROM_EMAIL=noreply@safeshipper.com

# ====================================================================
# SMS & PUSH NOTIFICATIONS
# ====================================================================

# Twilio SMS Service (Optional but recommended for production)
# Get credentials from: https://console.twilio.com/
TWILIO_ACCOUNT_SID=your-twilio-account-sid
TWILIO_AUTH_TOKEN=your-twilio-auth-token
TWILIO_PHONE_NUMBER=+1234567890

# Firebase Cloud Messaging (Optional - for mobile push notifications)
# Get from: https://console.firebase.google.com/
FCM_SERVER_KEY=your-firebase-server-key

# ====================================================================
# CLOUD STORAGE (AWS S3)
# ====================================================================

# AWS S3 Configuration (Optional but recommended for production)
# Get from: https://console.aws.amazon.com/iam/
AWS_ACCESS_KEY_ID=your-aws-access-key-id
AWS_SECRET_ACCESS_KEY=your-aws-secret-access-key
AWS_STORAGE_BUCKET_NAME=safeshipper-files
AWS_S3_REGION_NAME=us-east-1
AWS_S3_CUSTOM_DOMAIN=

# ====================================================================
# PAYMENT PROCESSING
# ====================================================================

# Stripe Payment Processing (Optional)
# Get from: https://dashboard.stripe.com/apikeys
STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
STRIPE_WEBHOOK_SECRET=whsec_your-stripe-webhook-secret

# ====================================================================
# OAUTH & SOCIAL AUTHENTICATION
# ====================================================================

# Google OAuth2 (Optional - for Google Sign-In)
# Get from: https://console.developers.google.com/
GOOGLE_CLIENT_ID=your-google-oauth-client-id
GOOGLE_CLIENT_SECRET=your-google-oauth-client-secret

# Microsoft Azure AD OAuth2 (Optional - for Microsoft Sign-In)
# Get from: https://portal.azure.com/
MICROSOFT_CLIENT_ID=your-microsoft-oauth-client-id
MICROSOFT_CLIENT_SECRET=your-microsoft-oauth-client-secret

# ====================================================================
# MAPPING & LOCATION SERVICES
# ====================================================================

# Google Maps API (Optional - for enhanced mapping features)
# Get from: https://console.cloud.google.com/apis/
GOOGLE_MAPS_API_KEY=your-google-maps-api-key

# ====================================================================
# AI/ML SERVICES
# ====================================================================

# OpenAI API (Optional - for enhanced document processing)
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=your-openai-api-key

# ====================================================================
# FILE STORAGE & MEDIA
# ====================================================================

# Local File Storage (Development)
MEDIA_ROOT=media/
STATIC_ROOT=staticfiles/

# ====================================================================
# SECURITY SETTINGS (Production)
# ====================================================================

# HTTPS Security (Set to True in production with proper SSL)
SECURE_SSL_REDIRECT=False
SECURE_HSTS_SECONDS=0
SECURE_HSTS_INCLUDE_SUBDOMAINS=False
SECURE_HSTS_PRELOAD=False

# ====================================================================
# LOGGING & MONITORING
# ====================================================================

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=logs/django.log

# ====================================================================
# SEARCH & ANALYTICS
# ====================================================================

# Elasticsearch Configuration (Optional - for advanced search)
# Download from: https://www.elastic.co/downloads/elasticsearch
ELASTICSEARCH_HOST=localhost:9200
ELASTICSEARCH_USERNAME=
ELASTICSEARCH_PASSWORD=
ELASTICSEARCH_USE_SSL=False
ELASTICSEARCH_VERIFY_CERTS=True

# ====================================================================
# API RATE LIMITING & THROTTLING
# ====================================================================

# Rate Limiting (requests per time period)
DEFAULT_THROTTLE_RATES_ANON=100/day
DEFAULT_THROTTLE_RATES_USER=1000/day
API_THROTTLE_RATES_BURST=10/min
API_THROTTLE_RATES_SUSTAINED=1000/hour

# ====================================================================
# WEBSOCKET & REAL-TIME FEATURES
# ====================================================================

# WebSocket Configuration (for real-time updates)
WEBSOCKET_URL=ws://localhost:8000/ws
CHANNEL_LAYERS_BACKEND=channels_redis.core.RedisChannelLayer
CHANNEL_LAYERS_CAPACITY=1500
CHANNEL_LAYERS_EXPIRY=60

# ====================================================================
# MONITORING & ERROR TRACKING
# ====================================================================

# Sentry Error Tracking (Optional but recommended for production)
# Get DSN from: https://sentry.io/
SENTRY_DSN=your-sentry-dsn-url
SENTRY_ENVIRONMENT=development
SENTRY_TRACES_SAMPLE_RATE=0.1

# Application Performance Monitoring
APM_SERVICE_NAME=safeshipper-backend
APM_ENVIRONMENT=development

# ====================================================================
# COMPLIANCE & AUDIT LOGGING
# ====================================================================

# Audit Logging Configuration
AUDIT_LOG_ENABLED=True
AUDIT_LOG_RETENTION_DAYS=365
AUDIT_LOG_SENSITIVE_FIELDS=password,ssn,credit_card

# Data Retention Policies
DATA_RETENTION_WEBHOOK_LOGS=90
DATA_RETENTION_API_LOGS=30
DATA_RETENTION_TEMP_FILES=7

# ====================================================================
# BACKUP & DISASTER RECOVERY
# ====================================================================

# Database Backup Configuration
BACKUP_ENABLED=True
BACKUP_SCHEDULE=0 2 * * *
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=safeshipper-backups

# ====================================================================
# EXTERNAL SERVICE TIMEOUTS & RETRIES
# ====================================================================

# API Timeout Configuration (seconds)
EXTERNAL_API_TIMEOUT=30
STRIPE_API_TIMEOUT=30
TWILIO_API_TIMEOUT=15
AWS_S3_TIMEOUT=60

# Retry Configuration
EXTERNAL_API_MAX_RETRIES=3
EXTERNAL_API_RETRY_DELAY=1
EXTERNAL_API_BACKOFF_FACTOR=2

# ====================================================================
# DANGEROUS GOODS SPECIFIC SETTINGS
# ====================================================================

# Dangerous Goods Compliance
DG_CLASSIFICATION_AUTO_ENABLED=True
DG_PLACARD_GENERATION_ENABLED=True
DG_EMERGENCY_CONTACT_REQUIRED=True
DG_SDS_VALIDATION_STRICT=True

# Regulatory Compliance
ADG_COMPLIANCE_ENABLED=True
DOT_COMPLIANCE_ENABLED=True
IATA_COMPLIANCE_ENABLED=True

# ====================================================================
# DEVELOPMENT SETTINGS
# ====================================================================

# Development flags (Set to False in production)
ENABLE_DEBUG_TOOLBAR=True
ENABLE_MOCK_SERVICES=True
ENABLE_API_DOCS=True
ENABLE_SILK_PROFILING=False

# Development Testing
TEST_DATABASE_SUFFIX=_test
TEST_RUNNER=django.test.runner.DiscoverRunner
TEST_PARALLEL=True

# ====================================================================
# PRODUCTION OPTIMIZATION
# ====================================================================

# Database Connection Pooling
DB_CONN_MAX_AGE=600
DB_CONN_HEALTH_CHECKS=True

# Performance Settings
CACHE_MIDDLEWARE_SECONDS=300
CACHE_MIDDLEWARE_KEY_PREFIX=safeshipper

# Static File Optimization
STATIC_FILE_COMPRESSION=True
STATIC_FILE_CACHE_CONTROL=max-age=31536000

# ====================================================================
# FEATURE FLAGS
# ====================================================================

# Feature Toggles (Enable/disable features dynamically)
FEATURE_ANALYTICS_DASHBOARD=True
FEATURE_REAL_TIME_TRACKING=True
FEATURE_MOBILE_API=True
FEATURE_CUSTOMER_PORTAL=True
FEATURE_ADVANCED_REPORTING=True
FEATURE_AI_DOCUMENT_PROCESSING=False
FEATURE_BLOCKCHAIN_TRACKING=False

# ====================================================================
# INTEGRATION TESTING
# ====================================================================

# Test Service URLs (for integration testing)
TEST_STRIPE_MODE=True
TEST_SMS_MODE=True
TEST_EMAIL_MODE=True
TEST_STORAGE_MODE=True

# Mock Service Configuration
MOCK_PAYMENT_ALWAYS_SUCCEED=True
MOCK_SMS_DELIVERY_DELAY=0.1
MOCK_EMAIL_STORE_LOCALLY=True 