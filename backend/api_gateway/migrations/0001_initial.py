# Generated by Django 5.2.1 on 2025-07-14 11:27

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="APIKey",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Descriptive name for this API key", max_length=200
                    ),
                ),
                ("key", models.CharField(editable=False, max_length=128, unique=True)),
                ("key_prefix", models.CharField(editable=False, max_length=8)),
                ("organization", models.CharField(blank=True, max_length=200)),
                (
                    "scopes",
                    models.JSONField(
                        default=list, help_text="List of allowed API scopes"
                    ),
                ),
                (
                    "allowed_ips",
                    models.JSONField(
                        default=list, help_text="Whitelist of allowed IP addresses"
                    ),
                ),
                (
                    "rate_limit",
                    models.IntegerField(default=1000, help_text="Requests per hour"),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("revoked", "Revoked"),
                            ("expired", "Expired"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("last_used_at", models.DateTimeField(blank=True, null=True)),
                ("total_requests", models.BigIntegerField(default=0)),
                ("total_errors", models.BigIntegerField(default=0)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_api_keys",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="APIUsageLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("endpoint", models.CharField(max_length=500)),
                ("method", models.CharField(max_length=10)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField(blank=True)),
                ("status_code", models.IntegerField()),
                ("response_time_ms", models.IntegerField()),
                ("bytes_sent", models.BigIntegerField(default=0)),
                ("bytes_received", models.BigIntegerField(default=0)),
                ("error_message", models.TextField(blank=True)),
                ("error_code", models.CharField(blank=True, max_length=50)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("request_id", models.CharField(blank=True, max_length=36)),
                (
                    "api_key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="usage_logs",
                        to="api_gateway.apikey",
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="DeveloperApplication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "application_type",
                    models.CharField(
                        choices=[
                            ("web", "Web Application"),
                            ("mobile", "Mobile Application"),
                            ("server", "Server Application"),
                            ("integration", "System Integration"),
                        ],
                        max_length=20,
                    ),
                ),
                ("website_url", models.URLField(blank=True)),
                ("callback_urls", models.JSONField(default=list)),
                ("organization", models.CharField(blank=True, max_length=200)),
                ("contact_email", models.EmailField(max_length=254)),
                (
                    "client_id",
                    models.CharField(editable=False, max_length=128, unique=True),
                ),
                ("client_secret", models.CharField(editable=False, max_length=128)),
                ("requested_scopes", models.JSONField(default=list)),
                ("approved_scopes", models.JSONField(default=list)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending Review"),
                            ("approved", "Approved"),
                            ("rejected", "Rejected"),
                            ("suspended", "Suspended"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("reviewed_at", models.DateTimeField(blank=True, null=True)),
                ("review_notes", models.TextField(blank=True)),
                ("rate_limit", models.IntegerField(default=1000)),
                ("monthly_quota", models.BigIntegerField(default=10000)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "developer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="developer_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reviewed_applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookEndpoint",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("url", models.URLField(max_length=500)),
                ("secret", models.CharField(editable=False, max_length=128)),
                (
                    "event_types",
                    models.JSONField(
                        default=list, help_text="List of event types to send"
                    ),
                ),
                (
                    "filters",
                    models.JSONField(
                        default=dict, help_text="Additional filters for events"
                    ),
                ),
                ("timeout_seconds", models.IntegerField(default=30)),
                ("max_retries", models.IntegerField(default=3)),
                ("retry_delay_seconds", models.IntegerField(default=60)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("inactive", "Inactive"),
                            ("failed", "Failed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("last_delivery_at", models.DateTimeField(blank=True, null=True)),
                ("last_error", models.TextField(blank=True)),
                ("total_deliveries", models.BigIntegerField(default=0)),
                ("successful_deliveries", models.BigIntegerField(default=0)),
                ("failed_deliveries", models.BigIntegerField(default=0)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "api_key",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="webhooks",
                        to="api_gateway.apikey",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookDelivery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("event_type", models.CharField(max_length=100)),
                ("event_id", models.UUIDField()),
                ("payload", models.JSONField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed"),
                            ("retrying", "Retrying"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("attempt_count", models.IntegerField(default=0)),
                ("max_attempts", models.IntegerField(default=3)),
                ("http_status", models.IntegerField(blank=True, null=True)),
                ("response_headers", models.JSONField(default=dict)),
                ("response_body", models.TextField(blank=True)),
                ("error_message", models.TextField(blank=True)),
                (
                    "scheduled_for",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("delivered_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "webhook",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deliveries",
                        to="api_gateway.webhookendpoint",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="APIDocumentation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("slug", models.SlugField(max_length=200, unique=True)),
                ("content", models.TextField()),
                (
                    "doc_type",
                    models.CharField(
                        choices=[
                            ("endpoint", "API Endpoint"),
                            ("guide", "Integration Guide"),
                            ("tutorial", "Tutorial"),
                            ("changelog", "Changelog Entry"),
                            ("reference", "Reference"),
                        ],
                        max_length=20,
                    ),
                ),
                ("category", models.CharField(blank=True, max_length=100)),
                ("tags", models.JSONField(default=list)),
                ("order", models.IntegerField(default=0)),
                ("endpoint_path", models.CharField(blank=True, max_length=500)),
                ("http_methods", models.JSONField(default=list)),
                ("required_scopes", models.JSONField(default=list)),
                ("version", models.CharField(default="1.0", max_length=20)),
                ("api_version_introduced", models.CharField(blank=True, max_length=20)),
                ("api_version_deprecated", models.CharField(blank=True, max_length=20)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("published", "Published"),
                            ("archived", "Archived"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("published_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["category", "order", "title"],
                "indexes": [
                    models.Index(
                        fields=["doc_type", "status"],
                        name="api_gateway_doc_typ_115830_idx",
                    ),
                    models.Index(
                        fields=["category", "order"],
                        name="api_gateway_categor_ae9969_idx",
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="apikey",
            index=models.Index(
                fields=["key_prefix"], name="api_gateway_key_pre_f212b1_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apikey",
            index=models.Index(
                fields=["status", "expires_at"], name="api_gateway_status_8a6901_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apiusagelog",
            index=models.Index(
                fields=["api_key", "timestamp"], name="api_gateway_api_key_3427d5_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apiusagelog",
            index=models.Index(
                fields=["endpoint", "timestamp"], name="api_gateway_endpoin_697025_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="apiusagelog",
            index=models.Index(
                fields=["status_code", "timestamp"],
                name="api_gateway_status__e0733a_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="webhookdelivery",
            index=models.Index(
                fields=["webhook", "status"], name="api_gateway_webhook_b97d1b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="webhookdelivery",
            index=models.Index(
                fields=["event_type", "created_at"],
                name="api_gateway_event_t_15ad02_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="webhookdelivery",
            index=models.Index(
                fields=["scheduled_for", "status"],
                name="api_gateway_schedul_e72e9d_idx",
            ),
        ),
    ]
