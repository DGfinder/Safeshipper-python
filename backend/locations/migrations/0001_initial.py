# Generated by Django 5.2.1 on 2025-05-31 15:58

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "code",
                    models.CharField(
                        help_text="Two-letter country code (e.g., AU, US, GB).",
                        max_length=2,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ISO 3166-1 Alpha-2 Code",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        max_length=100,
                        unique=True,
                        verbose_name="Country Name",
                    ),
                ),
                (
                    "continent_region",
                    models.CharField(
                        blank=True,
                        help_text="The continent or major geopolitical region the country belongs to.",
                        max_length=100,
                        null=True,
                        verbose_name="Continent/Major Region",
                    ),
                ),
            ],
            options={
                "verbose_name": "Country",
                "verbose_name_plural": "Countries",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Region",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the operational or administrative region (e.g., 'NSW Metro').",
                        max_length=150,
                        unique=True,
                        verbose_name="Region Name",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        help_text="Country this region belongs to.",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="regions",
                        to="locations.country",
                        verbose_name="Country",
                    ),
                ),
            ],
            options={
                "verbose_name": "Operational Region",
                "verbose_name_plural": "Operational Regions",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GeoLocation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        db_index=True,
                        help_text="Name of the location (e.g., 'Sydney Main Depot', 'Port Botany').",
                        max_length=255,
                        verbose_name="Location Name",
                    ),
                ),
                (
                    "location_type",
                    models.CharField(
                        choices=[
                            ("DEPOT", "Depot"),
                            ("CUSTOMER_SITE", "Customer Site"),
                            ("PORT", "Port"),
                            ("AIRPORT", "Airport"),
                            ("WAREHOUSE", "Warehouse"),
                            ("RAIL_YARD", "Rail Yard"),
                            ("BORDER_CROSSING", "Border Crossing"),
                            ("OTHER", "Other Site"),
                        ],
                        db_index=True,
                        max_length=20,
                        verbose_name="Location Type",
                    ),
                ),
                (
                    "latitude",
                    models.FloatField(
                        blank=True,
                        help_text="Latitude in decimal degrees (e.g., -33.8688).",
                        null=True,
                        verbose_name="Latitude",
                    ),
                ),
                (
                    "longitude",
                    models.FloatField(
                        blank=True,
                        help_text="Longitude in decimal degrees (e.g., 151.2093).",
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "address_structured",
                    models.JSONField(
                        blank=True,
                        help_text="JSON: street, city, state/province, postal_code, etc.",
                        null=True,
                        verbose_name="Structured Address",
                    ),
                ),
                (
                    "safe_fill_limits",
                    models.JSONField(
                        blank=True,
                        help_text="JSON field for safe fill limits if this location is a depot.",
                        null=True,
                        verbose_name="Safe Fill Limits (Depot)",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "country",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="locations.country",
                        verbose_name="Country",
                    ),
                ),
                (
                    "operational_regions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Regions this depot serves or belongs to.",
                        related_name="depots",
                        to="locations.region",
                        verbose_name="Operational Regions (if Depot)",
                    ),
                ),
            ],
            options={
                "verbose_name": "Geographic Location",
                "verbose_name_plural": "Geographic Locations",
                "ordering": ["name"],
                "unique_together": {("name", "country", "location_type")},
            },
        ),
    ]
