# Generated by Django 5.2.1 on 2025-07-19 (manually created)

from django.db import migrations, models
from django.core.validators import RegexValidator


class Migration(migrations.Migration):

    dependencies = [
        ('companies', '0003_add_strategic_indexes'),
    ]

    operations = [
        # Add currency validation constraint
        migrations.RunSQL(
            sql="""
            -- Create a function to validate ISO 4217 currency codes
            CREATE OR REPLACE FUNCTION is_valid_currency_code(code TEXT) RETURNS BOOLEAN AS $$
            DECLARE
                valid_currencies TEXT[] := ARRAY[
                    'USD', 'EUR', 'GBP', 'JPY', 'AUD', 'CAD', 'CHF', 'CNY', 'SEK', 'NZD',
                    'MXN', 'SGD', 'HKD', 'NOK', 'TRY', 'ZAR', 'BRL', 'INR', 'KRW', 'TWD',
                    'RUB', 'PLN', 'THB', 'MYR', 'CZK', 'HUF', 'ILS', 'CLP', 'PHP', 'AED',
                    'COP', 'SAR', 'RON', 'BGN', 'HRK', 'DKK', 'EGP', 'ISK', 'JOD', 'KWD',
                    'LBP', 'MAD', 'QAR', 'TND', 'UYU', 'VND', 'XAF', 'XCD', 'XOF', 'XPF'
                ];
            BEGIN
                RETURN code = ANY(valid_currencies);
            END;
            $$ LANGUAGE plpgsql IMMUTABLE;
            """,
            reverse_sql="DROP FUNCTION IF EXISTS is_valid_currency_code(TEXT);"
        ),
        
        # Add constraint to ensure valid currency codes
        migrations.AddConstraint(
            model_name='company',
            constraint=models.CheckConstraint(
                check=models.Q(currency__regex=r'^[A-Z]{3}$'),
                name='company_currency_format_check'
            ),
        ),
        
        # Add a separate constraint using the currency validation function
        migrations.RunSQL(
            sql="""
            ALTER TABLE companies_company 
            ADD CONSTRAINT company_currency_valid_check 
            CHECK (is_valid_currency_code(currency));
            """,
            reverse_sql="""
            ALTER TABLE companies_company 
            DROP CONSTRAINT IF EXISTS company_currency_valid_check;
            """
        ),
        
        # Add index for currency-based queries
        migrations.AddIndex(
            model_name='company',
            index=models.Index(
                fields=['currency', 'company_type'],
                name='company_currency_type_idx'
            ),
        ),
        
        # Add a view for currency-based analytics
        migrations.RunSQL(
            sql="""
            CREATE OR REPLACE VIEW companies_currency_summary AS
            SELECT 
                currency,
                COUNT(*) as company_count,
                COUNT(CASE WHEN status = 'ACTIVE' THEN 1 END) as active_companies,
                AVG(credit_limit) as avg_credit_limit,
                SUM(credit_limit) as total_credit_limit,
                COUNT(CASE WHEN company_type = 'CUSTOMER' THEN 1 END) as customer_count,
                COUNT(CASE WHEN company_type = 'CARRIER' THEN 1 END) as carrier_count
            FROM companies_company 
            WHERE currency IS NOT NULL 
            GROUP BY currency 
            ORDER BY company_count DESC;
            """,
            reverse_sql="DROP VIEW IF EXISTS companies_currency_summary;"
        ),
    ]