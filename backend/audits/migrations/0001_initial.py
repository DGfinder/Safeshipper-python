# Generated by Django 5.2.1 on 2025-07-14 10:55

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("shipments", "0002_consignmentitem_dg_quantity_type_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "action_type",
                    models.CharField(
                        choices=[
                            ("CREATE", "Created"),
                            ("UPDATE", "Updated"),
                            ("DELETE", "Deleted"),
                            ("STATUS_CHANGE", "Status Changed"),
                            ("DOCUMENT_UPLOAD", "Document Uploaded"),
                            ("DOCUMENT_DELETE", "Document Deleted"),
                            ("ASSIGNMENT_CHANGE", "Assignment Changed"),
                            ("LOCATION_UPDATE", "Location Updated"),
                            ("ACCESS_GRANTED", "Access Granted"),
                            ("ACCESS_DENIED", "Access Denied"),
                            ("LOGIN", "User Login"),
                            ("LOGOUT", "User Logout"),
                            ("EXPORT", "Data Exported"),
                            ("IMPORT", "Data Imported"),
                            ("VALIDATION", "Validation Performed"),
                            ("COMMUNICATION", "Communication Sent"),
                        ],
                        db_index=True,
                        max_length=50,
                        verbose_name="Action Type",
                    ),
                ),
                (
                    "action_description",
                    models.TextField(
                        help_text="Human-readable description of the action performed",
                        verbose_name="Action Description",
                    ),
                ),
                (
                    "user_role",
                    models.CharField(
                        blank=True,
                        help_text="User's role at the time of action",
                        max_length=30,
                        verbose_name="User Role",
                    ),
                ),
                ("object_id", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "old_values",
                    models.JSONField(
                        blank=True,
                        help_text="Previous values before change",
                        null=True,
                        verbose_name="Old Values",
                    ),
                ),
                (
                    "new_values",
                    models.JSONField(
                        blank=True,
                        help_text="New values after change",
                        null=True,
                        verbose_name="New Values",
                    ),
                ),
                (
                    "ip_address",
                    models.GenericIPAddressField(
                        blank=True, null=True, verbose_name="IP Address"
                    ),
                ),
                (
                    "user_agent",
                    models.TextField(
                        blank=True,
                        help_text="Browser/client information",
                        verbose_name="User Agent",
                    ),
                ),
                (
                    "session_key",
                    models.CharField(
                        blank=True,
                        help_text="Session identifier",
                        max_length=255,
                        verbose_name="Session Key",
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        help_text="Additional context-specific information",
                        null=True,
                        verbose_name="Additional Metadata",
                    ),
                ),
                (
                    "timestamp",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        verbose_name="Timestamp",
                    ),
                ),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="audit_logs",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="User",
                    ),
                ),
            ],
            options={
                "verbose_name": "Audit Log",
                "verbose_name_plural": "Audit Logs",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ComplianceAuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "regulation_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("IATA_DGR", "IATA Dangerous Goods Regulations"),
                            ("IMDG", "International Maritime Dangerous Goods"),
                            ("ADR", "European Agreement on Dangerous Goods"),
                            ("CUSTOM", "Custom Compliance Rule"),
                        ],
                        max_length=50,
                        verbose_name="Regulation Type",
                    ),
                ),
                (
                    "compliance_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("COMPLIANT", "Compliant"),
                            ("NON_COMPLIANT", "Non-Compliant"),
                            ("WARNING", "Warning"),
                            ("UNDER_REVIEW", "Under Review"),
                        ],
                        max_length=20,
                        verbose_name="Compliance Status",
                    ),
                ),
                (
                    "violation_details",
                    models.TextField(
                        blank=True,
                        help_text="Details of any compliance violations",
                        verbose_name="Violation Details",
                    ),
                ),
                (
                    "remediation_required",
                    models.BooleanField(
                        default=False,
                        help_text="Whether remediation action is required",
                        verbose_name="Remediation Required",
                    ),
                ),
                (
                    "remediation_deadline",
                    models.DateTimeField(
                        blank=True,
                        help_text="Deadline for remediation if required",
                        null=True,
                        verbose_name="Remediation Deadline",
                    ),
                ),
                (
                    "audit_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compliance_audits",
                        to="audits.auditlog",
                    ),
                ),
            ],
            options={
                "verbose_name": "Compliance Audit Log",
                "verbose_name_plural": "Compliance Audit Logs",
                "ordering": ["-audit_log__timestamp"],
            },
        ),
        migrations.CreateModel(
            name="ShipmentAuditLog",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "previous_status",
                    models.CharField(
                        blank=True,
                        help_text="Previous shipment status",
                        max_length=25,
                        verbose_name="Previous Status",
                    ),
                ),
                (
                    "new_status",
                    models.CharField(
                        blank=True,
                        help_text="New shipment status",
                        max_length=25,
                        verbose_name="New Status",
                    ),
                ),
                (
                    "location_at_time",
                    models.CharField(
                        blank=True,
                        help_text="Shipment location when action occurred",
                        max_length=255,
                        verbose_name="Location at Time",
                    ),
                ),
                (
                    "assigned_vehicle",
                    models.CharField(
                        blank=True,
                        help_text="Vehicle assigned at time of action",
                        max_length=255,
                        verbose_name="Assigned Vehicle",
                    ),
                ),
                (
                    "assigned_driver",
                    models.CharField(
                        blank=True,
                        help_text="Driver assigned at time of action",
                        max_length=255,
                        verbose_name="Assigned Driver",
                    ),
                ),
                (
                    "impact_level",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        default="LOW",
                        help_text="Business impact level of this action",
                        max_length=20,
                        verbose_name="Impact Level",
                    ),
                ),
                (
                    "audit_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shipment_audits",
                        to="audits.auditlog",
                    ),
                ),
                (
                    "shipment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_logs",
                        to="shipments.shipment",
                        verbose_name="Shipment",
                    ),
                ),
            ],
            options={
                "verbose_name": "Shipment Audit Log",
                "verbose_name_plural": "Shipment Audit Logs",
                "ordering": ["-audit_log__timestamp"],
            },
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["action_type", "timestamp"],
                name="audits_audi_action__e89bec_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["user", "timestamp"], name="audits_audi_user_id_312468_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="audits_audi_content_a44dbe_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="auditlog",
            index=models.Index(
                fields=["timestamp"], name="audits_audi_timesta_3b453d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="complianceauditlog",
            index=models.Index(
                fields=["compliance_status", "audit_log"],
                name="audits_comp_complia_10b0f6_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="complianceauditlog",
            index=models.Index(
                fields=["regulation_type"], name="audits_comp_regulat_606f7d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shipmentauditlog",
            index=models.Index(
                fields=["shipment", "audit_log"], name="audits_ship_shipmen_92ee9f_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="shipmentauditlog",
            index=models.Index(
                fields=["previous_status", "new_status"],
                name="audits_ship_previou_ce8bbe_idx",
            ),
        ),
    ]
