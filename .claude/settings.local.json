{
  "permissions": {
    "allow": [
      "Bash(python manage.py check:*)",
      "Bash(npm run lint)",
      "Bash(python3 manage.py check:*)",
      "Bash(npm run build:*)",
      "Bash(mv:*)",
      "Bash(npx next lint:*)",
      "Bash(npm install)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(rm:*)",
      "Bash(git add:*)",
      "Bash(find:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git config:*)",
      "Bash(grep:*)",
      "Bash(sed:*)",
      "Bash(rg:*)",
      "Bash(timeout 60 npm run build)",
      "Bash(timeout 30 npm run build)",
      "Bash(for file in src/app/dg-compliance/*/page.tsx)",
      "Bash(do echo \"Processing $file\")",
      "Bash(done)",
      "Bash(for file in src/app/*/*/page.tsx)",
      "Bash(do echo \"Fixing 3-level file: $file\")",
      "Bash(do echo \"Checking: $file\")",
      "Bash(echo:*)",
      "Bash(do if grep -q \"@/components\" \"$file\")",
      "Bash(then echo \"Fixing: $file\")",
      "Bash(fi)",
      "Bash(for file in src/app/*/*/*/page.tsx)",
      "Bash(then echo \"Fixing 4-level: $file\")",
      "Bash(npx tsc:*)",
      "Bash(npm install:*)",
      "Bash(python3:*)",
      "Bash(npm run type-check:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(python manage.py startapp:*)",
      "Bash(dos2unix:*)",
      "Bash(npm run dev:*)",
      "Bash(pip3 install:*)",
      "Bash(touch:*)",
      "Bash(git clone:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(docker:*)",
      "Bash(npx:*)",
      "Bash(./install.sh)",
      "Bash(timeout 60 docker-compose logs -f backend)",
      "Bash(timeout 45 docker-compose logs -f backend)",
      "Bash(python:*)",
      "Bash(pip3 list:*)",
      "Bash(cp:*)",
      "Bash(unzip:*)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 git filter-branch --force --index-filter 'git rm --cached --ignore-unmatch reference-code/Safeshipper-aboneda/credentials.json' --prune-empty --tag-name-filter cat -- --all)",
      "Bash(git gc:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(timeout 30 docker-compose run --rm backend python manage.py runserver 0.0.0.0:8000)",
      "Bash(curl:*)",
      "Bash(source:*)",
      "Bash(pip install:*)",
      "Bash(for route in \"/api-gateway\" \"/audits\" \"/inspections\" \"/customer-portal/notifications\" \"/customer-portal/requests\" \"/analytics/insights\")",
      "Bash(do echo \"Checking $route\")",
      "Bash(for:*)",
      "Bash(do echo \"=== $file ===\")",
      "Bash(if [ -f \"$file\" ])",
      "Bash(then tail -3 \"$file\")",
      "Bash(else echo \"File not found\")",
      "Bash(cd:*)",
      "Bash(do mkdir -p features/$feature/{components,hooks,services,stores,types,utils})",
      "Bash(cd:*)",
      "Bash(./venv/bin/python manage.py makemigrations:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(convert:*)",
      "Bash(chmod:*)",
      "Bash(cat:*)",
      "Bash(timeout 30s npm run build)",
      "Bash(timeout 60s npm run build)",
      "Bash(./fix-utils-imports.sh)",
      "Bash(cd:*)",
      "Bash(cd:*)",
      "Bash(sudo npm uninstall -g --force @anthropic-ai/claude-code)",
      "Bash(mkdir -p \"/mnt/c/Users/Hayden/Desktop/Safeshipper Home/frontend/src/app/fleet/analytics\")",
      "Bash(./venv/bin/python -m pip install:*)",
      "Bash(PYTHONPATH=. python3 -c \"import django; print(''Django version:'', django.VERSION)\")",
      "Bash(tree:*)",
      "Bash(git reset:*)",
      "Bash(true)",
      "Bash(pkill:*)",
      "Bash(DJANGO_SETTINGS_MODULE=safeshipper_core.settings_minimal python3 manage.py check)",
      "Bash(DJANGO_SETTINGS_MODULE=safeshipper_core.settings_minimal python3 manage.py migrate)"
    ],
    "deny": []
  }
}